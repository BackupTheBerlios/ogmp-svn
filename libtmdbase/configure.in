AC_INIT(configure.in)

dnl Checks for Programs.

dnl Making releases:
dnl   TMD_SUB += 1; continue with TMD_LT_* values below
dnl
TMD_MAJOR=0
TMD_MINOR=1
TMD_SUB=0

AC_SUBST(TMD_MAJOR)
AC_SUBST(TMD_MINOR)
AC_SUBST(TMD_SUB)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libtmdbase, 0.1)
AM_MAINTAINER_MODE

dnl
dnl Check for tools
dnl
AC_LANG_C
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AM_PROG_LIBTOOL

dnl
dnl Find the right ranlib, even when cross-compiling
dnl
AC_CHECK_TOOL(RANLIB, ranlib, :)
AC_CHECK_TOOL(STRIP, strip, :)
AC_CHECK_TOOL(AR, ar, :)
AC_CHECK_TOOL(LD, ld, :)

dnl
dnl functions
dnl
AC_DEFUN([TMD_ADD_CFLAGS], [
  for element in [$1]; do
    eval "CFLAGS_${element}="'"$'"{CFLAGS_${element}} $2"'"'
    am_modules_with_cflags="${am_modules_with_cflags} ${element}"
  done
])

AC_DEFUN([TMD_ADD_LDFLAGS], [
  for element in [$1]; do
    eval "LDFLAGS_${element}="'"'"$2 "'$'"{LDFLAGS_${element}} "'"'
    am_modules_with_ldflags="${am_modules_with_ldflags} ${element}"
  done
])

dnl
dnl  Set default values
dnl
LDFLAGS_tmd="${LDFLAGS}"

if test "x$prefix" = xNONE; then
   prefix="${ac_default_prefix}"
fi
if test "x$exec_prefix" = xNONE; then
   exec_prefix='${prefix}'
fi

TMD_CONFIG_PREFIX="${prefix}"
AC_SUBST(TMD_CONFIG_PREFIX)

dnl
dnl Check for dlopen, dlsym, dlclose
dnl
AC_CHECK_HEADERS(dlfcn.h sys/dl.h)
ac_cv_my_have_dlopen=no
AC_CHECK_FUNC(dlopen,
  ac_cv_my_have_dlopen=yes,
  AC_CHECK_LIB(dl, dlopen,
    ac_cv_my_have_dlopen=yes
    TMD_ADD_LDFLAGS([tmd],[-ldl]),
    AC_CHECK_LIB(svld, dlopen,
    ac_cv_my_have_dlopen=yes
    TMD_ADD_LDFLAGS([tmd],[-lsvld]))))
if test "${ac_cv_my_have_dlopen}" = "yes"; then
  AC_DEFINE(HAVE_DL_DLOPEN, 1, [Define if you have the dlopen API])
  ac_cv_have_plugins=yes
  DLOPEN_LDFLAGS="-ldl"
fi

dnl
dnl  SDL module
dnl
AC_ARG_ENABLE(sdl, [  --enable-sdl            SDL support (default enabled)])
if test "${enable_sdl}" != "no"
then
  SDL_PATH="${PATH}"

  AC_ARG_WITH(sdl-config-path,
    [    --with-sdl-config-path=PATH sdl-config path (default search in \$PATH)],
    [ if test "${with_sdl_config_path}" != "no"
      then
        SDL_PATH="${with_sdl_config_path}:${PATH}"
      fi ])

  AC_PATH_PROG(SDL12_CONFIG, sdl12-config, no, ${SDL_PATH})
  SDL_CONFIG="${SDL12_CONFIG}"
  SDL_HEADER="SDL12/SDL.h"

  if test "${SDL_CONFIG}" = "no"
  then
    AC_PATH_PROG(SDL11_CONFIG, sdl11-config, no, ${SDL_PATH})
    SDL_CONFIG=${SDL11_CONFIG}
    SDL_HEADER="SDL11/SDL.h"
  fi

  if test "${SDL_CONFIG}" = "no"
  then
    AC_PATH_PROG(SDL_CONFIG, sdl-config, no, ${SDL_PATH})
    SDL_HEADER="SDL/SDL.h"
  fi
    
  TMD_ADD_CFLAGS([sdl],[`${SDL_CONFIG} ${SDL_PREFIX} --cflags | sed 's,SDL,,'`])
  TMD_ADD_LDFLAGS([sdl],[`${SDL_CONFIG} ${SDL_PREFIX} --libs | sed 's,-rdynamic,,'`])
  SDL_CFLAGS="${CFLAGS_sdl}"
  SDL_LDFLAGS="${LDFLAGS_sdl}"
fi

AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LDFLAGS)
AC_SUBST(DLOPEN_LDFLAGS)

CFLAGS="$CFLAGS -fPIC"
LDFLAGS="$LDFLAGS -shared"

AC_OUTPUT(Makefile libtmdbase/Makefile \
	libtmdbase/libsdl/Makefile \
	libtmdbase/memwatch/Makefile \
	libtmdbase/posix/Makefile \
	misc/Makefile
	misc/timedia-config
)
